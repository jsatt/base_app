#!/bin/bash
set -e
script_base=$(dirname "$0")
source $script_base/tools
cd $script_base/..

load_env

no_input=
no_migrate=

POSITIONAL=()
while [[ $# -gt 0 ]]; do
    key="$1"
    case $key in
        -y|--no-input)
            no_input=1
            ;;
        --no-migrate)
            no_migrate=1
            ;;
        -h|--help|?)
            echo "Drop existing database service and restore from database backups"
            echo
            cecho "Usage: $(basename $0) <options> [SERVICE...]" default bold
            echo
            echo "Options:"
            echo "      --no-migrate    Skip running migrations"
            echo "  -y  --no-input      Assume yes on all user input"
            echo "  -h  --help          This help message"
            exit 0
            ;;
        *)
            POSITIONAL+=("$key")
            ;;
    esac
    shift
done
set -- "${POSITIONAL[@]}"

if [ ! $(can_run_docker $DEV_DOCKER_WORKFLOW db) ]; then
    cecho "This script currently only supports db restores when the db instance is managed by Docker." red bold
    cecho "Please manually restore the db or review your .env file." red bold
    exit 2
fi

shopt -s nullglob
dump_files=( docker/init/db/*.sql.gz docker/init/db/*.sql )
if (( ! ${#dump_files[@]} )); then
    cecho "No database dumps were found to restore from. Please retrieve a database dump file" yellow bold
    cecho "and place it in $(resolve_path "$script_base/../docker/init/db") to perform a restore." yellow bold
    if [ "$no_input" ]; then
        exit 1
    else
        cecho "Otherwise the database will be created empty." yellow bold
        read -n1 -r -p "Press 'Y' to continue or any other key to cancel..." key1
        echo

        if [ ! "$key1" ] || [[ "yY" != *"$key1"* ]]; then
            cecho "Aborting." red
            exit 0
        fi
    fi
fi

if [ ! "$no_input" ]; then
    cecho "Warning this will delete all data in your existing database service and replace" yellow bold
    cecho "it with data from any database dumps located in '$(resolve_path "$script_base/../docker/init/db")'." yellow bold
    read -n1 -r -p "Press 'Y' to continue or any other key to cancel..." key2
    echo

    if [ ! "$key2" ] || [[ "yY" != *"$key2"* ]]; then
        cecho "Aborting." red
        exit 0
    fi
fi

echo
cecho "Deleting old data..." default bold
$script_base/stop
docker-compose rm -svf db
docker volume rm -f base_app_db-data

echo
cecho "Restoring data..." default bold
$script_base/start -d db
wait_for_cycle "docker-compose top db | grep docker-entrypoint.sh"

if [ ! "$no_migrate" ]; then
    $script_base/start -d app
    echo
    cecho "Running migrations..." default bold
    $script_base/migrate
fi

echo
cecho "Data Restore complete!" green bold
