# How are you using Docker for development?
# full - Docker for running app and all dependencies (recommmended)
# deps - Docker for running dependencies, but running app natively
# none - Running app and all dependencies natively
DEV_DOCKER_WORKFLOW=full
#DEV_DOCKER_WORKFLOW=deps
#DEV_DOCKER_WORKFLOW=none

## ENVIRONMENT CONFIG
# choose a debugger tool, pdb, ipdb, bpdb, etc.
#PYTHONBREAKPOINT=ipdb.set_trace
# put ipython configs somewhere persistent, so you have history between Docker reboots
# Not needed for deps or none workflows.
#IPYTHONDIR=/usr/src/app/.ipython

## DOCKER COMPOSE SETTINGS

#COMPOSE_APP_PATH=.
#COMPOSE_CACHE_PORT=637
#COMPOSE_DB_PORT=5432
#COMPOSE_PYTHON_PKG_PATH=
#COMPOSE_TASK_CONCURRENCY=500
#COMPOSE_TASK_LOG_LEVEL=info
#COMPOSE_WEB_LOG_LEVEL=info
#COMPOSE_WEB_PORT=8002
#COMPOSE_WEB_WORKERS=4

## DJANGO SETTINGS

ALLOWED_HOSTS=*
#BASE_URL=
#CACHE_URL=redis://127.0.0.1:6370/0
#DATABASE_CONNECTION_AGE=60
#DATABASE_URL=
#DATABASE_PASSWORD=
DEBUG=True
#MEDIA_ROOT=
#MEDIA_URL=
#SECRET_KEY=keepitsecret
#SESSION_CACHE_URL=redis://127.0.0.1:6370/1
#SESSION_ENGINE=cache
#STATIC_ROOT=
#STATIC_URL=/static/

## DEPENDENCY SETTINGS

#CELERY_BROKER_URL=redis://127.0.0.1:6370/2
#CELERY_RESULT_BACKEND=redis://127.0.0.1:6370/3
#DD_ENV=development
#DD_SERVICE=
#DD_TAGS=
#DD_AGENT_SERVICE_HOST=dd-agent
#DD_AGENT_SERVICE_PORT=8126
#DD_STATSD_SERVICE_PORT=8125
#DD_LOGS_INJECTION=True
#DD_VERSION=
#LOG_FORMAT=
#LOG_FORMATTER=plain
#LOG_LEVEL=DEBUG
#SENTRY_DSN=
#SENTRY_ENVIRONMENT=development
#SENTRY_EVENT_LEVEL=ERROR
#SENTRY_LOG_LEVEL=INFO
#USE_DATADOG=True
#USE_SENTRY=True
